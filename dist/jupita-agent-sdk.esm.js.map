{"version":3,"file":"jupita-agent-sdk.esm.js","sources":["../src/agent/Contants.ts","../src/agent/ModelName.ts","../src/agent/MessageType.ts","../src/network/ErrorResponse.ts","../src/agent/Agent.ts"],"sourcesContent":["\nexport class Constants {\n\n    // define req variable\n    private static url: string = \"https://api.jupita.io/v1\";\n    public static dumpEndpoint: string = `${Constants.url}/dump`;\n    public static feedEndpoint: string = `${Constants.url}/feed`;\n    public static ratingEntpoint: string = `${Constants.url}/rating`;\n\n}\n\n\n\n","export class ModelName {\n    public static JUPITAV1: string = \"JupitaV1\";\n    public static JUPITAV2: string = \"JupitaV2\";\n}","export class MessageType {\n    public static Agent: number = 0;\n    public static Client: number = 1;\n};","// handling error for invalid input\nexport class InvalidParameterException extends Error {\n    constructor (message: string) {\n        super(message);\n        this.name = \"InvalidParameterException\";\n    }\n}","import request from \"request\";\nimport { Constants } from \"./Contants\";\nimport { ModelName } from \"./ModelName\";\nimport { MessageType } from \"./MessageType\";\n\n// error export\nimport { InvalidParameterException } from \"../network/ErrorResponse\"\n\n\n\nexport class Agent {\n    // initialize variable\n    token: string;\n    agent_id: string;\n\n    // define constructor\n    constructor(token: string, agent_id: string) {\n        this.token = token\n        this.agent_id = agent_id\n    };\n\n    // dump\n    dump(text: string, client_id: number, message_type: number = MessageType.Agent, isCall = false, listener: defaultListener|null|undefined=null) {\n\n        // checking input\n        if (message_type !== 1 || 0) {\n            throw new InvalidParameterException(` invalid input`)\n        };\n\n        // check optional parameter for listener\n        if (listener !== null) {\n            request.post(Constants.dumpEndpoint, {\n                json: { \"token\": this.token, \"agent id\": this.agent_id, \"client id\": client_id, \"message type\": message_type, \"text\": text, \"isCall\": isCall },\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            }, (err, res, body) => {\n                console.log(res)\n                if (err || res.statusCode !== 200) {\n                    listener.onError(res.statusCode.toString(), res.body)\n                } else {\n                    listener.onSuccess(body)\n                }\n            })\n        } else { console.log(\"Listener is not Defined\") };\n    }\n\n    // feed\n    feed(listener: defaultListener|null|undefined) {\n\n        request.post(Constants.feedEndpoint, {\n            json: { \"token\": this.token, \"agent id\": this.agent_id },\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n\n        }, (err, res, body) => {\n            if (listener == null || listener == undefined) return\n\n            if (err || res.statusCode !== 200) {\n                listener.onError(res.statusCode.toString(), res.body)\n            } else {\n                listener.onSuccess(body)\n            }\n        })\n\n\n    }\n\n    // rating listener\n    rating(model_name=ModelName.JUPITAV1, listener: defaultListener|null|undefined=null) {\n        // checking input\n        if (model_name !== (ModelName.JUPITAV1 || ModelName.JUPITAV2)) {\n            throw new InvalidParameterException(`${model_name} is a not valid modelname try ${ModelName.JUPITAV1} or ${ModelName.JUPITAV2}`)\n        }\n\n        // optional paramater\n        if (listener !== null) {\n            request.post(Constants.ratingEntpoint, {\n                json: {\"token\": this.token, \"agent id\": this.agent_id, \"model\": model_name},\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            }, (err, res, body) => {\n                if(err || res.statusCode !== 200){\n                    listener.onError(res.statusCode.toString(), res.body)\n                } else {\n                    listener.onSuccess(body)\n                }\n            })\n        } else {\n            console.log(\"No listener supplied\");\n        }\n\n    }\n}"],"names":["Constants","url","ModelName","MessageType","InvalidParameterException","message","name","Error","Agent","token","agent_id","dump","text","client_id","message_type","isCall","listener","request","post","dumpEndpoint","json","headers","err","res","body","console","log","statusCode","onError","toString","onSuccess","feed","feedEndpoint","undefined","rating","model_name","JUPITAV1","JUPITAV2","ratingEntpoint"],"mappings":"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"}